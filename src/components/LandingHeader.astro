---
import Logo from "./Logo.astro";

---



<header id="landing-header" class="py-6 px-10 flex items-center fixed top-0 w-full justify-between z-40 text-white">
    <div class="flex flex-grow basis-0">
    <Logo />
</div>
<nav>
<ul class="flex text-xl [&>li>a]:transition-color [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-bold [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2">
    <li><a href="#">Informaci√≥n</a></li>
    <li><a href="#">Excursiones</a></li>
    <li><a href="#">Riads</a></li>
    <li><a href="#">Ciudades</a></li>
    <li><a href="#">Tu viaje</a></li>
    <li><a href="#">Contacto</a></li>

    <div
    id="menu-backdrop"
    class={`
        absolute bg-white/20 backdrop-blur-lg rounded 
        left-[var(--left)] top-[var(--top)] 
        w-[var(--width)] h-[var(--height)] 
        trasition-all duration-300
        ease-in-out opacity-0 -z-10
        `}
    />
</header>

<script>
    const listItem = document.querySelectorAll("#landing-header li")
    const menuBackDrop = document.querySelector("#menu-backdrop") as HTMLElement
  
    listItem.forEach((item) => {
      item.addEventListener("mouseenter", () => {
        const { left, top, width, height } = item.getBoundingClientRect()
  
        menuBackDrop.style.setProperty("--left", `${left}px`)
        menuBackDrop.style.setProperty("--top", `${top}px`)
        menuBackDrop.style.setProperty("--width", `${width}px`)
        menuBackDrop.style.setProperty("--height", `${height}px`)
  
        menuBackDrop.style.opacity = "1"
        menuBackDrop.style.visibility = "visible"
      })
  
      item.addEventListener("mouseleave", () => {
        menuBackDrop.style.opacity = "0"
        menuBackDrop.style.visibility = "hidden"
      })
    })
  </script>

    

<script>
    const $header = document.querySelector('#landing-header') as HTMLElement

    const oberserverOptions = {
        root: null, 
        rootMargin: '0px', // en cuanto se vea el elemento
        threshold: 0.5, // porcentaje de visibildad
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            const { isIntersecting } = entry 
            if(isIntersecting) {
                const color = entry.target.getAttribute('data-header-color')
                $header.style.color = color
            }
        })
    }, oberserverOptions);

    const $sections = document.querySelectorAll(".landing-section")
    $sections.forEach((section) => observer.observe(section));
